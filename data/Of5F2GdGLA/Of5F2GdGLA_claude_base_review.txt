25 October 2023, 14:30 (modified: 25 October 2023, 14:30)
Summary: This paper proposes VeSX, a framework for web automation tasks that enhances Large Language Models' (LLMs) ability to perform complex interactions with web environments. VeSX introduces three key improvements: (1) subgoal-guided verification to verify execution results based on preset subgoals, (2) hierarchical self-correction that combines reflection and replanning to address mistakes in both planning and execution phases, and (3) an exemplar bank that improves in-context learning by partitioning execution trajectories and generating metadata for exemplars. The framework is evaluated on the WebArena benchmark, achieving a state-of-the-art success rate of 0.34 across five scenarios, outperforming existing methods without human guidance.

Soundness: 3
Presentation: 3
Contribution: 3
Strengths: The paper introduces a well-structured framework that addresses key challenges in web automation, particularly the issue of infeasible subtasks. The hierarchical self-correction mechanism is noteworthy, providing a systematic approach to error detection and correction at both execution and planning levels. The exemplar bank approach for in-context learning is innovative, especially by partitioning trajectories rather than using entire sequences. The extensive experimental validation across multiple scenarios demonstrates the framework's effectiveness, and the ablation studies provide good insights into the contribution of each component.

Weaknesses: While the paper demonstrates improved performance over baseline methods, the approach appears to be an integration of existing techniques rather than introducing fundamentally new algorithms. The paper lacks sufficient theoretical analysis of why the proposed components work together effectively. The verification mechanism shows a high false positive rate (0.57 as noted in the ablation studies), which raises questions about its reliability. Additionally, the computational cost analysis indicates that the method requires approximately 43.9% more actions compared to human-guided workflows, suggesting potential efficiency issues for real-world applications.

Questions: 1. How does the verification component handle ambiguous cases where the subgoal might be partially satisfied? 
2. Could the authors elaborate on how the exemplar bank could be extended to handle new web environments or tasks not seen during training?
3. What strategies could be implemented to reduce the false positive rate of the verification module?
4. How does the framework handle dynamic web content that may change between planning and execution phases?

Flag For Ethics Review: 
Rating: 6
Confidence: 4
Code Of Conduct: yes